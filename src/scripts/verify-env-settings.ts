import dotenv from 'dotenv';
dotenv.config({ path: '.env.local' });

import { config } from '../config';

console.log('üîç Verifying Environment Variable Parsing\n');

console.log('üìã Raw Environment Variables:');
console.log(`   ‚Ä¢ GENERATE_PDF: "${process.env['GENERATE_PDF']}"`);
console.log(`   ‚Ä¢ GENERATE_ART: "${process.env['GENERATE_ART']}"`);
console.log(`   ‚Ä¢ USE_REFINEMENTS: "${process.env['USE_REFINEMENTS']}"`);
console.log(`   ‚Ä¢ MOCK_LLM: "${process.env['MOCK_LLM']}"`);
console.log(`   ‚Ä¢ DEBUG: "${process.env['DEBUG']}"`);
console.log(`   ‚Ä¢ NODE_ENV: "${process.env['NODE_ENV']}"`);

console.log('\n‚öôÔ∏è Parsed Config Values:');
console.log(`   ‚Ä¢ config.generation.generatePDF: ${config.generation.generatePDF}`);
console.log(`   ‚Ä¢ config.generation.generateArt: ${config.generation.generateArt}`);
console.log(`   ‚Ä¢ config.development.mockLLM: ${config.development.mockLLM}`);
console.log(`   ‚Ä¢ config.development.debug: ${config.development.debug}`);

console.log('\nüéØ Expected Behavior:');
console.log(`   ‚Ä¢ PDF Generation: ${config.generation.generatePDF ? '‚úÖ Enabled' : '‚ùå Disabled'}`);
console.log(`   ‚Ä¢ Art Generation: ${config.generation.generateArt ? '‚úÖ Enabled' : '‚ùå Disabled'}`);
console.log(`   ‚Ä¢ Mock LLM: ${config.development.mockLLM ? '‚úÖ Enabled' : '‚ùå Disabled'}`);
console.log(`   ‚Ä¢ Use Refinements: ${process.env['USE_REFINEMENTS'] !== 'false' ? '‚úÖ Enabled' : '‚ùå Disabled'}`);

console.log('\nüìä Generation Pipeline:');
if (process.env['USE_REFINEMENTS'] !== 'false') {
  console.log('   ‚Ä¢ Will use: Refinement Pipeline (3 iterations)');
} else {
  console.log('   ‚Ä¢ Will use: Simple Generation (1 iteration)');
}

console.log('\n‚úÖ Verification Complete!'); 